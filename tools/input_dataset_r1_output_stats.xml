<tool id="input_dataset_r1_output_stats" name="Input dataset R1 output statistics" version="1.0.0">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <command>
        #import time
        #set non_ready_states = ['new', 'queued', 'running', 'setting_metadata', 'upload']
        #while $input.dataset.state in $non_ready_states:
            time.sleep(60)
        #end while
        #set history_id = $__app__.security.encode_id($input.history.id)
        #set history_name = $input.history.name
        python $__tool_directory__/input_dataset_output_stats.py
        --config_file $__tool_directory__/stats_config.ini
        --input "$input"
        --input_id "$__app__.security.encode_id($input.id)"
        --input_datatype "$input.ext"
        --dbkey "$input.metadata.dbkey"
        --history_id "$history_id"
        --history_name "$history_name"
        --stats_tool_id "input_dataset_r1_output_stats"
        --tool_id "$tool_id"
        --tool_category "output_fastqRead1"
        --user_email "$__user_email__"
        --output "$payload"
    </command>
    <inputs>
        <param name="input" type="data" format="fastq.gz" label="Fastqsanger.gz input" />
    </inputs>
    <outputs>
        <data name="payload" type="data" format="txt" label="Send ${tool.name} results to PEGR" />
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**

Generates statistics on the Read1 input dataset in the **CEGR Galaxy ChIP-exo** pipeline.

A JSON dictionary containing the run, sample and genome reference is sent via a POST
to the PEGR REST API where the information is stored to support the CEGR ChIP-exo
statistics reports.
    </help>
    <expand macro="citations" />
</tool>
