<!-- This is generalized version of Galaxy-PEGR API tools available https://github.com/seqcode/cegr-galaxy/tree/master/tools/cegr_statistics
The tool is compatible with most of the Galaxy tools and will send meta data info of the upstream tool to PEGR -->

<tool id="galaxy_post_pegr" name="post metadata info to PEGR" version="1.0.0">
    <description></description>
    <macros>
		    <!-- <import>macros.xml</import> -->
    </macros>
    <command>
        <![CDATA[
            #import time
            #set non_ready_states = ['new', 'queued', 'running', 'setting_metadata', 'upload']
            #while $input.dataset.state in $non_ready_states:
                time.sleep(60)
            #end while
            #set history_id = $__app__.security.encode_id($input.history.id)
            #set history_name = $input.history.name
            #set job = $input.creating_job
            #set job_state = $job.state
            #if $job_state == 'error':
                #set stderr = $job.stderr
            #else:
                #set stderr = ''
            #end if
            #set tool_id = $job.tool_id
            #set tool_parameters = ""
            #for $p in $job.parameters:
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
                #set tool_parameters = $tool_parameters + "__SeP__" + str($p.value)
            #end for
            #set workflow_step = None
            #set pjaas = $job.post_job_actions
            #for pjaa in $pjaas:
                #set pja = pjaa.post_job_action
                #set workflow_step = $pja.workflow_step
            #end for
            python $__tool_directory__/galaxy_post_pegr.py
	    --config_file $config_input
            --input "$input"
            --input_id "$__app__.security.encode_id($input.id)"
            --input_datatype "$input.ext"
            --dbkey "$input.metadata.dbkey"
            --history_id "$history_id"
            --history_name "$history_name"
            --stats_tool_id "$tool_id"
            --stderr "$stderr"
            --tool_id "galaxy_post_pegr"
            --tool_parameters "$tool_parameters"
            --user_email "$__user_email__"
            #if $workflow_step is not None:
                --workflow_step_id "$__app__.security.encode_id($workflow_step.id)"
            #end if
            --output "$payload"
        ]]>
    </command>
    <inputs>
	    <param name="config_input" type="data" label="PEGR Info file" />
	    <param name="input" type="data" label="input" />

    </inputs>
    <outputs>
        <data name="payload" type="data" format="txt" label="Send ${tool.name} results to PEGR" />
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**

A JSON dictionary containing the run, sample, genome reference and tool metadata information is sent
via a POST to the PEGR REST API.
    </help>

    <citations>
        <citation type="bibtex">
                @ARTICLE{PEGR_supplement,
                author = {Ali Nematbakhsh},
                title = {None},
                year = {None},
                eprint = {None},
                url = {https://www.biotech.cornell.edu/core-facilities-brc/facilities/epigenomics-facility}
		}

	    </citation>
        <citation type="bibtex">
                @unpublished{None,
                author = {Greg Von Kuster},
                title = {None},
                year = {None},
                eprint = {None},
                url = {http://www.huck.psu.edu/content/research/independent-centers-excellence/center-for-eukaryotic-gene-regulation}
			    }
	    </citation>
    
    </citations>


</tool>
